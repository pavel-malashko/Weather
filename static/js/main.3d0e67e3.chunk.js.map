{"version":3,"sources":["responsive/Device.js","components/ResultFadeIn.js","components/NotFound.js","components/BigLabel.js","components/SmallLabel.js","components/Text.js","components/Result.js","actions/index.js","constants/types.js","utils/index.js","api/api.js","api/getWeather.js","components/SearchCity.js","components/App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","ResultFadeIn","keyframes","NotFoundWrapper","styled","div","NotfoundIcon","span","NotFoundText","NotFound","icon","faFrown","BigLabel","h2","color","weight","fontSize","align","firstToUpperCase","SmallLabel","h4","Text","Results","LocationWrapper","CurrentWeatherWrapper","WeatherIcon","TemperatureWrapper","Temperature","h3","WeatherDetailsWrapper","WeatherDetail","Result","weather","city","country","date","description","main","temp","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","weatherIcon","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faCloud","faSmog","Math","floor","success","response","type","error","parseData","data","name","sys","round","temp_max","temp_min","Date","toLocaleTimeString","slice","clouds","all","speed","setCity","cities","find","value","push","key","length","localStorage","setItem","JSON","stringify","instance","axios","create","baseURL","interceptors","request","use","config","params","q","appid","getWeather","dispatch","openweathermap","get","then","catch","e","autocorrect","require","words","allCities","map","SearchBar","form","showResult","SearchInput","input","SearchIcon","AutoValueTitle","autoValue","secondary","SearchCity","useState","setValue","setAutoValue","useDispatch","getCities","parse","getItem","onSubmit","preventDefault","trim","list","placeholder","onChange","target","faSearch","id","item","AppTitle","h1","showLabel","WeatherWrapper","App","weatherInfo","useSelector","state","initialState","status","reducer","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.3d0e67e3.chunk.js","sourcesContent":["const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '525px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nconst device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`,\n};\n\nexport default device;\n","import { keyframes } from 'styled-components';\n\nconst ResultFadeIn = keyframes`\n  to {\n    opacity: 1;\n        visibility: visible;\n        top: 0;\n  }\n`;\n\nexport default ResultFadeIn;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrown } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport ResultFadeIn from './ResultFadeIn';\n\nconst NotFoundWrapper = styled.div`\n  max-width: 600px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 100px auto 0;\n  padding: 20px;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  border-radius: 10px;\n  top: 20px;\n  background-color: rgba(255, 255, 255, 0.3);\n  border-radius: 10px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst NotfoundIcon = styled.span`\n  display: block;\n  text-align: center;\n  color: #ffffff;\n  font-size: 40px;\n  margin-right: 10px;\n`;\n\nconst NotFoundText = styled.span`\n  color: #ffffff;\n  font-size: 17px;\n`;\n\nconst NotFound = () => {\n  return (\n    <NotFoundWrapper>\n      <NotfoundIcon>\n        <FontAwesomeIcon icon={faFrown} />\n      </NotfoundIcon>\n      <NotFoundText>Sorry, the specified city was not found..</NotFoundText>\n    </NotFoundWrapper>\n  );\n};\n\nexport default NotFound;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst BigLabel = styled.h2`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '30px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '37px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '43px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '52px'};\n  } \n`;\n\nexport default BigLabel;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst SmallLabel = styled.h4`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-weight: ${({ weight }) => weight || '600'};\n  font-size: ${({ fontSize }) => fontSize || '15px'};\n  text-align: ${({ align }) => align || 'left'};\n  padding: 5px 0;\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '20px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '23px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '26px'};\n  }\n`;\n\nexport default SmallLabel;\n","import styled from 'styled-components';\nimport device from '../responsive/Device';\n\nconst Text = styled.span`\n  color: ${({ color }) => color || '#FFFFFF'};\n  display: block;\n  font-size: ${({ fontSize }) => fontSize || '12px'};\n  text-align: ${({ align }) => align || 'left'};\n\n  ${({ firstToUpperCase }) =>\n    firstToUpperCase &&\n    `\n  &:first-letter {\n    text-transform: uppercase;\n  }\n  `}\n  @media ${device.tablet} {\n    font-size: ${({ fontSize }) => fontSize || '15px'};\n  }\n  @media ${device.laptop} {\n    font-size: ${({ fontSize }) => fontSize || '17px'};\n  } \n  @media ${device.laptopL} {\n    font-size: ${({ fontSize }) => fontSize || '19px'};\n  }\n`;\n\nexport default Text;\n","import {\n  faBolt,\n  faCloud,\n  faCloudRain,\n  faCloudShowersHeavy,\n  faSmog,\n  faSnowflake,\n  faSun,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport device from '../responsive/Device';\nimport BigLabel from './BigLabel';\nimport ResultFadeIn from './ResultFadeIn';\nimport SmallLabel from './SmallLabel';\nimport Text from './Text';\n\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst LocationWrapper = styled.div`\n  flex-basis: 100%;\n`;\n\nconst CurrentWeatherWrapper = styled.div`\n  flex-basis: 100%;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  grid-template-columns: auto 1fr;\n  margin: 20px 0;\n  grid-gap: 30px;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n    padding-right: 10px;\n  }\n  @media ${device.tablet} {\n    grid-template-columns: 1fr 1fr;\n    padding-right: 20px;\n  }\n`;\n\nconst WeatherIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 70px;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 100px;\n    justify-content: flex-end;\n  }\n  @media ${device.laptop} {\n    font-size: 120px;\n  }\n  @media ${device.laptopL} {\n    font-size: 140px;\n  }\n`;\n\nconst TemperatureWrapper = styled.div``;\n\nconst Temperature = styled.h3`\n  display: block;\n  font-size: 50px;\n  font-weight: 400;\n  color: #ffffff;\n  @media ${device.tablet} {\n    font-size: 70px;\n  }\n  @media ${device.laptop} {\n    font-size: 90px;\n  }\n  @media ${device.laptopL} {\n    font-size: 110px;\n  }\n`;\n\nconst WeatherDetailsWrapper = styled.div`\n  flex-basis: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px 0;\n  margin: 20px 0;\n  background-color: rgba(255, 255, 255, 0.2);\n  border-radius: 10px;\n  align-self: flex-start;\n  @media ${device.mobileL} {\n    flex-basis: 50%;\n  }\n`;\n\nconst WeatherDetail = styled.div`\n  flex-basis: calc(100% / 3);\n  padding: 10px;\n  @media ${device.laptop} {\n    padding: 20px 10px;\n  }\n`;\n\nconst Result = ({ weather }) => {\n  const {\n    city,\n    country,\n    date,\n    description,\n    main,\n    temp,\n    sunset,\n    sunrise,\n    humidity,\n    wind,\n    highestTemp,\n    lowestTemp,\n  } = weather;\n\n  let weatherIcon = null;\n\n  if (main === 'Thunderstorm') {\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\n  } else if (main === 'Drizzle') {\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\n  } else if (main === 'Rain') {\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n  } else if (main === 'Snow') {\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\n  } else if (main === 'Clear') {\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\n  } else if (main === 'Clouds') {\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\n  } else {\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\n  }\n\n  return (\n    <Results>\n      <LocationWrapper>\n        <BigLabel>\n          {city}, {country}\n        </BigLabel>\n        <SmallLabel weight=\"400\">{date}</SmallLabel>\n      </LocationWrapper>\n      <CurrentWeatherWrapper>\n        <WeatherIcon>{weatherIcon}</WeatherIcon>\n        <TemperatureWrapper>\n          <Temperature>{Math.floor(temp)}&#176;</Temperature>\n          <SmallLabel weight=\"400\" firstToUpperCase>\n            {description}\n          </SmallLabel>\n        </TemperatureWrapper>\n      </CurrentWeatherWrapper>\n      <WeatherDetailsWrapper>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {Math.floor(highestTemp)}&#176;\n          </SmallLabel>\n          <Text align=\"center\">Hight</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {wind}mph\n          </SmallLabel>\n          <Text align=\"center\">Wind</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {sunrise}\n          </SmallLabel>\n          <Text align=\"center\">Sunrise</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {Math.floor(lowestTemp)}&#176;\n          </SmallLabel>\n          <Text align=\"center\">Low</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {humidity}%\n          </SmallLabel>\n          <Text align=\"center\">Rain</Text>\n        </WeatherDetail>\n        <WeatherDetail>\n          <SmallLabel align=\"center\" weight=\"400\">\n            {sunset}\n          </SmallLabel>\n          <Text align=\"center\">Sunset</Text>\n        </WeatherDetail>\n      </WeatherDetailsWrapper>\n    </Results>\n  );\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    sunrise: PropTypes.string,\n    sunset: PropTypes.string,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    highestTemp: PropTypes.number,\n    lowestTemp: PropTypes.number,\n  }).isRequired,\n};\n\nexport default Result;\n","import { ERROR, FETCH_DATA, SUCCESS } from '../constants/types';\n\nexport const fetching = () => ({ type: FETCH_DATA });\nexport const success = response => ({ type: SUCCESS, response });\nexport const error = response => ({ type: ERROR, response });\n","export const FETCH_DATA = `FETCH_DATA`;\nexport const SUCCESS = `SUCCESS`;\nexport const ERROR = `ERROR`;\n","export function parseData(data) {\n  return {\n    city: data.name,\n    country: data.sys.country,\n    description: data.weather[0].description,\n    main: data.weather[0].main,\n    temp: Math.round((data.main.temp - 273.15) * 10) / 10,\n    highestTemp: Math.round((data.main.temp_max - 273.15) * 10) / 10,\n    lowestTemp: Math.round((data.main.temp_min - 273.15) * 10) / 10,\n    sunrise: new Date(data.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5),\n    sunset: new Date(data.sys.sunset * 1000).toLocaleTimeString().slice(0, 5),\n    clouds: data.clouds.all,\n    humidity: data.main.humidity,\n    wind: data.wind.speed,\n  };\n}\n\nexport function setCity(cities, city) {\n  const uniqValue = cities.find(data => data.value === city);\n  if (!uniqValue) {\n    cities.push({ key: cities.length + 1, value: city });\n    localStorage.setItem('cities', JSON.stringify(cities));\n  }\n}\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.openweathermap.org/data/2.5/',\n});\n\ninstance.interceptors.request.use(config => {\n  config.params = {\n    q: 'Minsk',\n    appid: '6b474aa0006c665bf1049403ef8c8ac6',\n    ...config.params,\n  };\n  return config;\n});\n\nexport default instance;\n","import { error, fetching, success } from '../actions';\nimport { setCity } from '../utils';\nimport openweathermap from './api';\n\nconst getWeather = (cities, city = '') => {\n  return dispatch => {\n    dispatch(fetching());\n    openweathermap\n      .get('/weather', { params: { q: city } })\n      .then(response => {\n        dispatch(success(response));\n        setCity(cities, city);\n      })\n      .catch(e => dispatch(error(e)));\n  };\n};\n\nexport default getWeather;\n","import { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport getWeather from '../api/getWeather';\nimport allCities from '../cities.json';\nimport device from '../responsive/Device';\n\nconst autocorrect = require('autocorrect')({ words: allCities.map(data => data.name) });\n\nconst SearchBar = styled.form`\n  top: ${({ showResult }) => (showResult ? '0%' : '30%')};\n  position: relative;\n  margin: 0 auto;\n  max-width: 500px;\n  transition: 0.8s 0.5s;\n  @media ${device.laptopL} {\n    max-width: 600px;\n  }\n  @media ${device.desktop} {\n    max-width: 700px;\n  }\n`;\n\nconst SearchInput = styled.input`\n  width: 100%;\n  border: none;\n  background-color: #ffffff;\n  font-size: 16px;\n  padding: 10px 15px 10px 40px;\n  color: #c5c5c5;\n  transition: 0.2s;\n  border-radius: 20px;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  &:focus {\n    color: #191919;\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n    outline: none;\n  }\n  @media ${device.tablet} {\n    font-size: 18px;\n  }\n  @media ${device.laptop} {\n    padding: 15px 20px 15px 45px;\n    border-radius: 30px;\n  }\n  &::-webkit-calendar-picker-indicator {\n    display: none;\n  }\n`;\n\nconst SearchIcon = styled.span`\n  display: block;\n  position: absolute;\n  top: 50%;\n  left: 22px;\n  transform: translate(-50%, -50%);\n  height: 14px;\n  width: 14px;\n  font-size: 14px;\n  color: #c5c5c5;\n  @media ${device.tablet} {\n    height: 15px;\n    width: 15px;\n    font-size: 15px;\n  }\n  @media ${device.laptop} {\n    height: 16px;\n    width: 16px;\n    font-size: 16px;\n  }\n`;\n\nconst AutoValueTitle = styled.h3`\n  top: ${({ showResult }) => (showResult ? '0%' : '30%')};\n  display: block;\n  height: 15px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 15px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({ autoValue }) => (autoValue ? 1 : 0)};\n\n  ${({ secondary }) =>\n    secondary &&\n    `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 15px;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 10px;\n    }\n    @media ${device.laptop} {\n      font-size: 15px;\n    }\n    @media ${device.laptopL} {\n      font-size: 20px;\n    }\n    @media ${device.desktop} {\n      font-size: 25px;\n    }\n    \n  `}\n\n  ${({ autoValue }) =>\n    autoValue &&\n    `\n    opacity: 0;\n    visibility: hidden;\n    top: 20%;\n  `}\n`;\n\nconst SearchCity = ({ showResult }) => {\n  const [value, setValue] = useState('');\n  const [autoValue, setAutoValue] = useState('');\n\n  const dispatch = useDispatch();\n  const getCities = () => {\n    return JSON.parse(localStorage.getItem('cities')) || [];\n  };\n  const handleInputChange = e => {\n    setValue(e.target.value);\n    if (e.target.value) {\n      setAutoValue(autocorrect(e.target.value));\n    } else {\n      setAutoValue('');\n    }\n  };\n\n  const handleSearchCity = e => {\n    e.preventDefault();\n    if (value.trim()) {\n      dispatch(getWeather(getCities(), value));\n      setAutoValue('');\n    }\n  };\n\n  return (\n    <>\n      <SearchBar showResult={showResult} onSubmit={handleSearchCity}>\n        <SearchInput\n          type=\"text\"\n          value={value}\n          list=\"cities\"\n          placeholder=\"Enter city\"\n          onChange={handleInputChange}\n        />\n        <SearchIcon>\n          <FontAwesomeIcon icon={faSearch} />\n        </SearchIcon>\n        <datalist id=\"cities\">\n          {getCities().map(item => (\n            <option key={item.key}>{item.value}</option>\n          ))}\n        </datalist>\n      </SearchBar>\n      <AutoValueTitle secondary autoValue={!autoValue} showResult={showResult}>\n        maybe you mean the name of the city - {autoValue}\n      </AutoValueTitle>\n    </>\n  );\n};\n\nSearchCity.propTypes = {\n  showResult: PropTypes.bool.isRequired,\n};\n\nexport default SearchCity;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport styled from 'styled-components';\nimport device from '../responsive/Device';\nimport NotFound from './NotFound';\nimport Result from './Result';\nimport SearchCity from './SearchCity';\n\nconst AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n\n  ${({ secondary }) =>\n    secondary &&\n    `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n  ${({ showResult }) =>\n    showResult &&\n    `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\n\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\nexport default function App() {\n  const weatherInfo = useSelector(state => state.weatherInfo);\n  const error = useSelector(state => state.error);\n  return (\n    <>\n      <AppTitle showLabel={(weatherInfo || error) && true}>Weather app</AppTitle>\n      <WeatherWrapper>\n        <AppTitle secondary showResult={(weatherInfo || error) && true}>\n          Weather app\n        </AppTitle>\n        <SearchCity showResult={(weatherInfo || error) && true} />\n        {weatherInfo && <Result weather={weatherInfo} />}\n        {error && <NotFound error={error} />}\n      </WeatherWrapper>\n    </>\n  );\n}\n","import { ERROR, FETCH_DATA, SUCCESS } from '../constants/types';\nimport { parseData } from '../utils';\n\nexport const initialState = {\n  status: null,\n  response: null,\n  weatherInfo: null,\n  error: false,\n};\n\nconst reducer = (state = initialState, { type, response } = {}) => {\n  switch (type) {\n    case FETCH_DATA:\n      return { ...initialState, status: FETCH_DATA };\n    case SUCCESS:\n      return { ...state, status: SUCCESS, weatherInfo: parseData(response.data) };\n    case ERROR:\n      return { ...state, status: ERROR, error: true };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/App';\nimport './index.sass';\nimport reducer from './reducers/index';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('weather-app'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}